// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using idtiApiService.Impl;

namespace idtiApiService.Migrations
{
    [DbContext(typeof(IntegrationContext))]
    [Migration("20181016221550_init_db")]
    partial class init_db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("idtiApiService.Model.EventData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("deviceId");

                    b.Property<int>("doorStatus");

                    b.Property<string>("eventCode");

                    b.Property<string>("eventDate");

                    b.Property<string>("eventDateTime");

                    b.Property<string>("eventTime");

                    b.Property<int>("funcCode");

                    b.Property<int>("moduleAddr");

                    b.Property<int>("operationMode");

                    b.Property<int>("readerAddr");

                    b.Property<bool>("sync");

                    b.Property<string>("systemDateTime");

                    b.Property<string>("userId");

                    b.HasKey("id");

                    b.ToTable("eventlogs");
                });

            modelBuilder.Entity("idtiApiService.Model.Terminal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("commReadTimeOut");

                    b.Property<int>("commSerialBPS");

                    b.Property<string>("commSerialPort");

                    b.Property<int>("commType");

                    b.Property<int>("controllerModel");

                    b.Property<string>("ipAddr");

                    b.Property<string>("name");

                    b.Property<bool>("polling");

                    b.Property<int>("protocolVersion");

                    b.Property<int>("status");

                    b.Property<int>("tcpPort");

                    b.HasKey("id");

                    b.ToTable("terminals");
                });
#pragma warning restore 612, 618
        }
    }
}
